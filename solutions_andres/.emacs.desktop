;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Thu Sep 29 08:43:34 2016
;; Desktop file format version 206
;; Emacs version 24.5.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (22508 47126 597059 767000) (desktop . "206") "afr@afr-asus" nil nil ((((font-backend xft x) (font . "-unknown-Ubuntu Mono-normal-normal-normal-*-11-*-*-*-m-0-iso10646-1") (font-parameter . "Ubuntu Mono 12") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (foreground-color . "#eaeaea") (background-color . "#000000") (mouse-color . "black") (border-color . "#424242") (screen-gamma) (line-spacing) (left-fringe . 9) (right-fringe . 9) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 1) (tool-bar-lines . 0) (title) (wait-for-wm . t) (fullscreen . maximized) (tool-bar-position . top) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (alpha) (horizontal-scroll-bars . t) (display-type . color) (background-mode . dark) (cursor-color . "#d54e53") (sticky) (environment) (frameset--id . "E395-3021-BF11-9403") (frameset--mini t . t) (height . 60) (width . 224) (modeline . t) (minibuffer . t) (unsplittable) (left . 0) (top . 21) (icon-name) (visibility . t) (display . ":0") (explicit-name)) ((min-height . 8) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 10) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 96) (min-pixel-width . 120) (min-pixel-height-ignore . 48) (min-pixel-width-ignore . 60) (min-pixel-height-safe . 24) (min-pixel-width-safe . 24)) hc (pixel-width . 1366) (pixel-height . 715) (total-width . 228) (total-height . 60) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 684) (pixel-height . 715) (total-width . 114) (total-height . 60) (normal-height . 1.0) (normal-width . 0.3777372262773723) (buffer "hello.scala" (selected . t) (hscroll . 0) (fringes 9 9 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 147) (start . 1))) (vc (last . t) (pixel-width . 682) (pixel-height . 715) (total-width . 114) (total-height . 60) (normal-height . 1.0) (normal-width . 0.6222627737226277) (combination-limit) (leaf (pixel-width . 682) (pixel-height . 355) (total-width . 114) (total-height . 30) (normal-height . 0.5) (normal-width . 1.0) (buffer "*Help*" (selected) (hscroll . 0) (fringes 9 9 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 11434) (start . 10981))) (leaf (last . t) (pixel-width . 682) (pixel-height . 360) (total-width . 114) (total-height . 30) (normal-height . 0.5) (normal-width . 1.0) (buffer "*Messages*" (selected) (hscroll . 0) (fringes 9 9 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 66704) (start . 66011))))))])
(setq comint-input-ring nil)
(setq compile-history nil)
(setq desktop-missing-file-warning nil)
(setq extended-command-history '("ensime-sbt-do-run" "ensime-sbt-do-ensime-config" "ensime-mode" "scala-mode" "customize-mode" "ensime-mode" "conf-mode" "ensime-sbt-do-ensime-config" "ensime" "package-list-packages" "paredit-forward-slurp-sexp" "paredit-forward-barf-sexp" "sort-lines" "indent-region" "100-column-rule" "java-mode" "shell" "paredit-backward-slurp-sexp" "run-python" "paredit-convolute-sexp" "paredit-forward" "count-words-region" "count-lines-region" "comment-region" "set-variable" "upcase-region" "python-shell-send-file" "uncomment-region" "LaTeX-mode" "tex-shell"))
(setq face-name-history nil)
(setq file-name-history '("~/.emacs.d/elpa/ensime-20160921.1725/ensime-autoloads.el" "~/.emacs.d/elpa/scala-mode-20160902.525/scala-mode-autoloads.el" "~/.emacs.d/elpa/sbt-mode-20160914.818/sbt-mode-autoloads.el" "~/.emacs.d/elpa/yasnippet-20160801.1142/yasnippet-autoloads.el" "~/.emacs.d/elpa/company-20160829.1206/company-autoloads.el" "/home/afr/scala-work/LearningScalaMaterials/solutions_andres/hello.scala" "/home/afr/scala-work/LearningScalaMaterials/solutions_andres" "~/scala-work/LearningScalaMaterials/Exercises/ch1-GettingStarted.asciidoc" "~/scala-work/LearningScalaMaterials/Errata/ch1-GettingStarted.asciidoc" "/home/afr/scala-work/LearningScalaMaterials/README.asciidoc" "~/scala-work/LearningScalaMaterials/README.asciidoc" "~/.cache/.fr-S7kjN6/META-INF/MANIFEST.MF" "~/.cache/.fr-GnZvOi/META-INF/MANIFEST.MF" "/tmp/test.c" "/tmp/systemd-private-8371b4d42d3441b49af708460ed19073-systemd-timesyncd.service-AA4Ulc/" "/home/afr/Desktop/bullshit.txt" "~/Desktop/bullshit.txt" "/tmp/test.py" "/tmp/test.clj" "~/gdx-work/prototype1/android/assets/atlases/scene1.atlas" "~/gdx-work/prototype1/android/assets/atlases/permanent.atlas" "~/gdx-work/prototype1/android/assets/scene1/pack.json" "~/gdx-work/prototype1/android/assets/presentation-packed/presentation.atlas" "~/gdx-work/prototype1/android/assets/presentation/pack.json" "~/Desktop/[street_bg] (imported).map" "~/gdx-work/prototype1/android/assets/walkcycle-packed/pack.atlas" "~/FBX Converter/notes on fbx-conv-lin64" "~/Desktop/contracultura.txt" "~/.emacs.d/init.el" "~/deeplearn/lib/python2.7/site-packages/IPython/core/display.py" "~/deeplearn/lib/python2.7/site-packages/IPython/lib/display.py" "~/deeplearn/lib/python2.7/site-packages/IPython/display.py" "~/matlab-octave-work/octave-tutorial.m" "~/.emacs.d/elpa/expand-region-20150902.558/latex-mode-expansions.el" "~/git/machine-learning-coursera/notes.txt" "~/git/deep-learning-udacity/notes-deep-learning.txt" "~/SS16/bachelorarbeit/bachelorarbeit-notes.txt" "~/SS16/bachelorarbeit/THESIS/latex/misc/references.bib" "~/SS16/bachelorarbeit/THESIS/latex/chapters/machine-learning.tex" "~/git/curso_csmv/cv/presentacion_curso_2016.tex" "~/SS16/bachelorarbeit/DATASET/download_carnatic/README.txt" "~/SS16/bachelorarbeit/THESIS/latex/MAIN.tex" "~/SS16/bachelorarbeit/THESIS/latex/chapters/dataset-statistics.tex" "~/SS16/bachelorarbeit/DATASET/download_carnatic/download_carnatic.py" "~/SS16/verteilte/uebungen/ex00/hello.cc" "~/SS16/verteilte/uebungen/ex00/Makefile" "~/SS16/verteilte/uebungen/ex02/Makefile" "~/SS16/verteilte/uebungen/ex02/tcp-demo-client.c" "~/SS16/verteilte/uebungen/ex02/tcp-demo-server.c" "~/gdx-work/notes.txt" "~/gdx-work/adventure-editor-0.9.15/bin/adventure-editor" "~/gdx-work/bladecoder1/core/core.iml" "~/gdx-work/bladecoder1/core/build.gradle" "~/Desktop/kram/EVERMORE.sp7"))
(setq grep-find-history nil)
(setq grep-history nil)
(setq ido-buffer-history '("ch1-GettingStarted.asciidoc" "README.asciidoc" "bullshit.txt" "*shell*" "test.c" "*scratch*" "*cider-repl localhost*" "pack.json —£À scene1" "scene1.atlas" "*shell*<2>" "01-automatization.pdf" "graphicpointmanager.py" "README.txt" "download_carnatic.py" "machine-learning.tex" "MAIN.tex" "*tex-shell*" "references.bib" "MAIN.pdf" "summary.tex" "machine-learning.log" "carnatic-music.tex" "authorship.tex" "init-textile.el" "authorship.log" "test.txt" "00-summary.tex" "cover.tex" "MAIN.log" "00-summary.log" "02-dataset.tex" "01-carnatic-music.tex" "00-authorship.tex" "00-foreword.tex" "deep-notmnist-record.py" "#notes-deep-learning.txt#" ".#notes-deep-learning.txt" "*IPython2*" "1_notmnist.ipynb" "jupyter_notebook_config.py" "README.md" "Dockerfile" "init.el" "init-auto-complete.el" "*IPython3*" "notes-deep-learning.txt" "init.el —£À ###.emacs.d" "ipython.el" "init.el —£À .emacs.d"))
(setq ido-last-directory-list '(("/home/afr/scala-work/LearningScalaMaterials/" . "solutions_andres/") ("/home/afr/scala-work/" . "LearningScalaMaterials/") ("/tmp/" . "systemd-private-8371b4d42d3441b49af708460ed19073-systemd-timesyncd.service-AA4Ulc/") ("/home/afr/SS16/bachelorarbeit/THESIS/" . "latex/") ("/home/afr/SS16/bachelorarbeit/" . "THESIS/") ("/home/afr/SS16/bachelorarbeit/THESIS/latex/" . "chapters/") ("/home/afr/.emacs.d/" . "site-lisp/") ("/home/afr/SS16/machine-learning/machine-learning-ex6/" . "ex6/") ("/home/afr/SS16/machine-learning/machine-learning-ex2/" . "ex2/") ("/home/afr/SS16/" . "machine-learning/") ("/home/" . "afr/") ("/" . "tmp/") ("/home/afr/SS16/machine-learning/machine-learning-ex3/" . "ex3/") ("/home/afr/SS16/machine-learning/" . "machine-learning-ex6/") ("/home/afr/" . "scala-work/")))
(setq ido-work-directory-list '("/home/afr/scala-work/LearningScalaMaterials/solutions_andres/" "/home/afr/scala-work/LearningScalaMaterials/" "/tmp/systemd-private-8371b4d42d3441b49af708460ed19073-systemd-timesyncd.service-AA4Ulc/" "/home/afr/Desktop/" "/tmp/" "/home/afr/SS16/bachelorarbeit/THESIS/latex/chapters/" "/home/afr/SS16/bachelorarbeit/THESIS/latex/" "/home/afr/SS16/bachelorarbeit/" "/home/afr/SS16/bachelorarbeit/THESIS/latex/misc/" "/home/afr/SS16/bachelorarbeit/THESIS/latex/cover/" "/home/afr/git/deep-learning-udacity/" "/home/afr/.jupyter/" "/home/afr/.emacs.d/" "/home/afr/.emacs.d/lisp/" "/home/afr/SS16/machine-learning/machine-learning-ex8/ex8/" "/home/afr/SS16/machine-learning/machine-learning-ex7/ex7/" "/home/afr/matlab-octave-work/" "/home/afr/SS16/machine-learning/" "/home/afr/SS16/machine-learning/machine-learning-ex6/ex6/" "/home/afr/SS16/machine-learning/machine-learning-ex5/ex5/" "/home/afr/SS16/machine-learning/machine-learning-ex4/ex4/" "/home/afr/SS16/machine-learning/machine-learning-ex3/ex3/" "/home/afr/SS16/machine-learning/machine-learning-ex2/ex2/"))
(setq ido-work-file-list '("hello.scala" "solutions_andres" "README.asciidoc" "bullshit.txt" "test.py" "test.clj" "dataset-statistics.tex" "MAIN.tex" "01-automatization.pdf" "summary.tex"))
(setq minibuffer-history '("ensime-mode" "c-basic-offset" "tex-mode.elc" "texinfo.elc" "textmodes/" "tex-bibtex-file" "LaTeX-mode" "bibtex-mode" "tex-mode" "customize-mode" "fill-region" "100" "80" "fill-paragraph" "70" "plotDecisionBoundary" "visualizeBoundaryLinear" "visualizeBoundary" "109" "PREDICTIONS" "INFINITY" "column-enforce-mode" "smooth-scrolling"))
(setq query-replace-history '("0," "," "\n> " "\n" "\n" ".\"," ". \"," ".\"," ". \",\"" "" "long " "" "\n" "" "*" "\n" "\n[ ]+" "\n[ ]+" "" "fitRatio" "*fitRatio,\n" ",\n" "\\,(format \",%d,\" (- 1050 (string-to-number \\1)))" ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(if (= 0 (% \\# 2)) \",\" \",\n\")" "," "," "\\,(format \",%d,\" (- 1048 (string-to-number \\1)))" ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(format \",%d,\" \\1)" ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(format \",%d,\" (- 1000 \\#))" ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(format \",%d,\" \\#)" ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(format \",%d,\" \\#" ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(format \",%d,\" (- 1048 \\1))" ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(format \",%d,\" (- 1048 \\1))" ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(if (= (% \\# 2) 0) \",\" \",\n\")" "," "," ",game.HEIGHT-\\1," ",\\([0-9]+\\)," ",\\([0-9]+\\)," "\\,(if (= (% \\# 2) 0) \",\" \",\n\")" "," "," " //" "   //"))
(setq read-expression-history nil)
(setq regexp-history nil)
(setq regexp-search-ring nil)
(setq register-alist '((48 . "")))
(setq search-ring '("scala" "cala" "jason" "}" "literal" "superim" "tonal" "microton" "present" "analogic" "materi" "part" "melo" "lineari" "poly" "listen_s"))
(setq shell-command-history nil)
(setq tags-file-name nil)
(setq tags-table-list nil)

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/home/afr/scala-work/LearningScalaMaterials/solutions_andres/hello.scala"
  "hello.scala"
  'scala-mode
  '(anzu-mode auto-complete-mode global-auto-revert-mode undo-tree-mode whole-line-or-region-mode hes-mode guide-key-mode whitespace-cleanup-mode auto-compile-on-load-mode column-enforce-mode flycheck-mode goto-address-prog-mode paredit-everywhere-mode bug-reference-prog-mode diff-hl-mode highlight-symbol-mode company-mode yas-minor-mode ensime-mode)
  147
  '(8 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix)))

